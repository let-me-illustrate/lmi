// 2005 ChangeLog for "Let me illustrate...".
//
// Copyright (C) 2005 Gregory W. Chicares.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
//
// http://savannah.nongnu.org/projects/lmi
// email: <chicares@cox.net>
// snail: Chicares, 186 Belle Woods Drive, Glastonbury CT 06033, USA

// $Id: ChangeLog,v 1.22 2005-03-11 04:41:59 chicares Exp $

2005-01-14

Original checkin.

2005-01-15

  actuarial_table.cpp
  crc32.cpp
  crc32_test.cpp
  data_directory.cpp
  ihs_proddata.cpp
Remove carriage returns.

  elapsed_time.cpp
  system_command.cpp
  system_command.hpp
Add missing RCS Id.

2005-01-16

  sample_cgi_census
Expunge this file, which was a disused artifact.

  build.hpp
  expected.cgi.out
  version.hpp
Add copyright and license notices and RCS Ids to these files, no
matter how trivial they seem. Now every single file in this cvs
directory has these things, creating an invariant that can be
confirmed automatically.

2005-01-27 [1092]

  quoted_gpl
  quoted_gpl_html
Add automatically-generated files for embedding the GPL in other
source, as quoted C strings and html respectively.

  GNUmakefile
  autodependency.make
  configuration.make
  msw_common.make
  msw_cygwin.make
  msw_generic.make
  msw_msys.make
  objects.make
  posix_fhs.make
  workhorse.make
Add makefiles.

2005-01-28 [1104]

Changes necessary to compile with gcc-3.4.2 with no diagnostics:

  config.hpp
  platform_dependent.hpp
Make prototypes of nonstandard functions like putenv() available even
in strict standard-conformance mode.

  GNUmakefile
  argv0.hpp
  diagnostics.sed
  miscellany.hpp
  quiet_nan.hpp
  zero.hpp
All non-configuration headers must include "config.hpp" first. Fix
those that didn't. Add a makefile test for this invariant; refine
other such tests slightly, and improve the sed script that parses
makefile output for diagnostics.

  alert.cpp
Remove a defect marker that called for investigation into a problem
whose cause has been tracked to a libstdc++ defect.

  library_demo.cpp
Don't enforce production-grade security for this mere demo.

  financial_test.cpp
Run timing test once only: it took too long with mpatrol.

  security.cpp
Flush message log on passkey validation failure.

  actuarial_table.cpp
  alert.hpp
  basic_values.hpp
  fenv_lmi.hpp
  ihs_acctval.cpp
  ihs_basicval.cpp
  ihs_funddata.hpp
  ihs_ldginvar.cpp
  input_test.cpp
  inputillus.cpp
  inputillus.hpp
  interest_rates.cpp
  ledger_xml_io.cpp
  round_to_test.cpp
  rounding_rules.hpp
  streamable.hpp
  system_command.hpp
  zero.hpp
  zero_test.cpp
Fix other problems diagnosed by gcc-3.4.2, which is stricter than
earlier versions. Use import and export declspec attributes wherever
they make sense: even though it's better not to use them with msw,
they may be useful with gcc-4.x's ELF 'visibility' feature. Remove
superfluous class-name qualifiers from members defined in class
bodies. Factor out duplicative code to manage the floating-point
environment. Other minor changes to improve conformance.

Unit tests do not yet run properly with gcc-3.4.2 and mpatrol, so that
newer compiler version can't yet replace gcc-3.2.3 for production.
However, these changes affect no gcc-3.2.3 test results.

2005-01-31 [1096]

  actuarial_table.cpp
  actuarial_table_test.cpp
  any_member_test.cpp
  cgimain.cpp
  crc32.cpp
  crc32.hpp
  financial.hpp
  generate_passkey.cpp
  ihs_acctval.cpp
  ihs_basicval.cpp
  ihs_dbvalue.cpp
  ihs_dbvalue.hpp
  ihs_funddata.cpp
  ihs_funddata.hpp
  ihs_irc7702.cpp
  ihs_irc7702.hpp
  ihs_ldginvar.cpp
  ihs_ldgvar.hpp
  ihs_ledger.cpp
  ihs_loads.cpp
  ihs_mortal.cpp
  ihs_tierdata.cpp
  input_test.cpp
  inputillus.cpp
  inputillus_sequences.cpp
  inputstatus.cpp
  inputstatus.hpp
  ledger.hpp
  main.cpp
  mathmisc.hpp
  md5.cpp
  passkey_test.cpp
  round_to.hpp
  round_to_test.cpp
  secure_date.cpp
  sigfpe.cpp
  solve.cpp
  test_tools.hpp
  workhorse.make
Use stricter gcc warnings. Fix problems indicated by stricter warnings
with gcc-3.4.2--and also with como, which is not yet fully supported.

  inputillus.cpp
Rewrite a block of suspicious code that had seemed to work properly in
the past, but failed with gcc-3.4.2 and mpatrol.

2005-02-03 [1107]

  facets.cpp
Forestall a gcc warning about a slightly unusual line of code already
documented as standard conforming.

  GNUmakefile
  workhorse.make
Use '-g' instead of '-ggdb' because of a MinGW problem documented
inline.

  materially_equal.hpp
Reformat for clarity.

  datum_base.cpp
  datum_base.hpp
  mc_enum.cpp
  mc_enum.hpp
  mc_enum.tpp
  mc_enum_fwd.hpp
  mc_enum_test.cpp
  mc_enum_test_aux.cpp
  mc_enum_test_aux.hpp
  mc_enum_test_aux_enums.hpp
  mc_enum_type_enums.hpp
  mc_enum_types.cpp
  mc_enum_types.hpp
  numeric_io_cast.hpp
  numeric_io_test.cpp
  numeric_io_traits.hpp
  snprintf_test.cpp
  stream_cast.hpp
  stream_cast_test.cpp
  test_tools_test.cpp
  tn_range.hpp
  tn_range.tpp
  tn_range_fwd.hpp
  tn_range_test.cpp
  tn_range_test_aux.cpp
  tn_range_test_aux.hpp
  tn_range_type_trammels.hpp
  tn_range_types.cpp
  tn_range_types.hpp
Import these unit-test files from the cvs/lmi/skeleton branch.

  objects.make
Add imported unit tests.

  workhorse.make
Test idempotence of template-instantiation files, which are akin to
headers. Add test targets for the antediluvian branch's cgi-bin and
command-line interfaces.

Now, with gcc-3.4.2 and stricter warning flags: all code compiles with
no diagnostics, except for an unused-parameter warning in one boost
file; all unit tests succeed except for one in a facility slated for
replacement and one that detects standard-library conformance; and
mpatrol with default $(MPATROL_OPTIONS) issues no diagnostic for any
unit test.

  main.cpp
Number of iterations adapts to make self test take about five seconds.
Add several getopt options, implementing only a stub for regression
testing for now.

  mpatrol-mingw-GNUmakefile
Add 'install' target.

2005-02-04 [1085]

  accountvalue.cpp
  accountvalue.hpp  [expunged]
  account_value.hpp [new file]
  avdebug.cpp
  ihs_acctval.cpp
  ihs_acctval.hpp   [expunged]
  ihs_avdebug.cpp
  ihs_avmly.cpp
  ihs_avsolve.cpp
  ihs_avstrtgy.cpp
  ledger.hpp
  ledgervalues.cpp
  library_demo.cpp
  solve.cpp
Merge account-value headers for the antediluvian and production
branches.

  library_demo.cpp
Write crc32 output to a separate file.

2005-02-08

  dbnames.cpp
  dbnames.hpp
  dbnames.txt        [expunged]
  dbnames.xpp        [new file]
  tiername.txt       [expunged]
  tiered_charges.xpp [new file]
Replace oddly-named source files.

2005-02-12 [1070]

  cgimain.cpp
Add default catch-anything clause.

  dbdict.cpp
Add several database entities.

  expected.cgi.out
Accept changes of less than one part per million on without further
investigation, because they are observed only on a non-production
branch.

  account_value.hpp
  accountvalue.cpp
  antediluvian_stubs.cpp [new file]
  basic_values.hpp
  basicvalues.cpp
  calculate.hpp
  death_benefits.cpp     [new file]
  death_benefits.hpp     [new file]
  deathbenefits.cpp      [expunged]
  deathbenefits.hpp      [expunged]
  generate_product_files.cpp
  ihs_acctval.cpp
  ihs_avdebug.cpp
  ihs_avmly.cpp
  ihs_avsolve.cpp
  ihs_avstrtgy.cpp
  ihs_basicval.cpp
  ihs_deathbft.cpp       [expunged]
  ihs_deathbft.hpp       [expunged]
  ihs_ldgbase.cpp        [renamed to ledger_base.cpp]
  ihs_ldgbase.hpp        [renamed to ledger_base.hpp]
  ihs_ldginvar.cpp       [renamed to ledger_invariant.cpp]
  ihs_ldginvar.hpp       [renamed to ledger_invariant.hpp]
  ihs_ldgvar.cpp         [renamed to ledger_variant.cpp]
  ihs_ldgvar.hpp         [renamed to ledger_variant.hpp]
  ihs_ledger.cpp         [renamed to ledger.cpp]
  ihs_ledger.hpp         [renamed to ledger.hpp]
  ihs_mortal.cpp
  ihs_standalone.cpp
  ihs_tierdata.cpp       [renamed to tiered_charges.cpp]
  ihs_tierdata.hpp       [renamed to tiered_charges.hpp]
  ledger.cpp             [expunged old contents, then reused name]
  ledger.hpp             [expunged old contents, then reused name]
  ledger_base.cpp        [new file]
  ledger_base.hpp        [new file]
  ledger_invariant.cpp   [new file]
  ledger_invariant.hpp   [new file]
  ledger_variant.cpp     [new file]
  ledger_variant.hpp     [new file]
  ledger_xml_io.cpp
  ledgervalues.cpp
  ledgervalues.hpp
  library_demo.cpp
  loads.cpp
  main.cpp
  mortality_rates.cpp
  multiple_cell_document.cpp
  multiple_cell_document.hpp
  objects.make
  proprietary.cpp
  solve.cpp
  tiered_charges.cpp     [new file]
  tiered_charges.hpp     [new file]
Rename ledger classes and files. Merge production branch's ledger
classes into the antediluvian branch. Rename tiered-charge classes and
files. Remove some gratuitous differences between account-value class
branches. Merge, rewrite, and rename death-benefit classes. Extend
self test in 'main.cpp'. Improve antediluvian branch's run time: even
though the production branch's ledger classes are slower, caching
table values makes solves about forty percent faster.

2005-02-13 [1072]

  objects.make
  obstruct_slicing.hpp      [new file]
  obstruct_slicing_test.cpp [new file]
Add mixin class to obstruct slicing.

  database.cpp
  database.hpp
  death_benefits.hpp
  dbdict.hpp
  dbvalue.cpp
  dbvalue.hpp
  ihs_commfns.cpp
  ihs_commfns.hpp
  ihs_database.cpp
  ihs_dbdict.hpp
  ihs_funddata.cpp
  ihs_funddata.hpp
  ihs_irc7702.cpp
  ihs_irc7702.hpp
  ihs_irc7702a.cpp
  ihs_irc7702a.hpp
  inputstatus.hpp
  ledgervalues.hpp
  multiple_cell_document.hpp
  single_cell_document.hpp
  tiered_charges.cpp
  tiered_charges.hpp
As appropriate: obstruct slicing, making the dtor nonvirtual; use
boost::noncopyable, preferring it to writing a private copy ctor and
assignment operator and documenting them as unimplemented.

  basic_values.hpp
  basicvalues.cpp
  commutation_functions_test.cpp
  generate_product_files.cpp
  ihs_acctval.cpp
  ihs_avdebug.cpp
  ihs_avmly.cpp
  ihs_basicval.cpp
  ihs_commfns.cpp
  ihs_commfns.hpp
  ihs_funddata.cpp
  ihs_funddata.hpp
  ihs_irc7702.cpp
  ihs_irc7702.hpp
  ihs_irc7702a.cpp
  ihs_irc7702a.hpp
  ihs_server7702.cpp
  ihs_standalone.cpp
  ihs_standalone.hpp
  irc7702a_test.cpp
  ledger_invariant.cpp
  objects.make
  proprietary.cpp
Revise and rename commutation-function, fund, and 7702 and 7702A
classes.

2005-02-16 [1063]

  accountvalue.cpp
  basic_values.hpp
  basicvalues.cpp
  death_benefits.cpp
  ihs_acctval.cpp
  ihs_avdebug.cpp
  ihs_avmly.cpp
  ihs_avsolve.cpp
  ihs_avstrtgy.cpp
  ihs_basicval.cpp
  ihs_loads.cpp
  ihs_mortal.cpp
  interest_rates.cpp
  ledger_invariant.cpp
  ledgervalues.cpp
  ledgervalues.hpp
  mortality_rates.cpp
  outlay.cpp
  solve.cpp
Use smart instead of raw pointers to hold resources in some classes,
without fixing the parallel problem in others yet. Rename certain
data members for consistency. Speed of the antediluvian command-line
test is about four percent slower; the degradation is demonstrably
attributable to removal of the hand-written assignment operator and
copy ctor in class BasicValues. The tradeoff is acceptable because
the removed code was not clearly correct, and the implicitly-defined
special member functions bring the system a step closer to exception
safety.

2005-02-16 [1059]

  ledger.cpp
  ledger.hpp
Use smart instead of raw pointers to hold resources in another class,
eliminating hand-written special member functions as above. This
change makes the antediluvian command-line test run twelve percent
faster.

2005-02-17 [1059]

  ledger.hpp
Improve documentation.

  mpatrol_patch_test.cpp
  objects.make
Demonstrate the purpose of a patch submitted to mpatrol, and verify
that it has been applied.

  cgicc-patch-gwc-20050217
Workaround to make cgicc-3.1.4 work with the free, gcc-based MinGW
toolchain on the msw platform. Oddly enough, this GNU package appears
to support that platform only with non-free tools, which lmi users
must not be required to use; the same seems to be true even of the
current release, which however seems even more difficult to compile
with the MinGW toolchain. This casual workaround is not of sufficient
quality to propose as a patch to the maintainer.

  xmlwrapp-patch-gwc-20050217
Fix some oversights and frank errors in xmlwrapp-0.2.0 . It would seem
pointless to submit this patch to the maintainer because several later
versions have been released. It will become obsolete once a later
version of xmlwrapp has been tested.

  msw_common.make
  msw_generic.make
  workhorse.make
Expect to find third-party libraries where the File Hierarchy Standard
would suggest, in /usr/local . On posix systems like GNU/Linux, this
should just work. For msw, it encourages users to adopt a rational
file hierarchy.

  workhorse.make
Add a separate build directory for gprof.

  spew_touchstone
  workhorse.make
Add a test of production-branch account values.

  workhorse.make
Strengthen warning $(CFLAGS) for unit tests.

  GNUmakefile
Prevent 'check_conformity' target from complaining that patches and
testing touchstones don't follow source-code conventions: they
shouldn't.

2005-02-18 [1059]

  GNUmakefile
Add test for current copyright date.

  getopt.cpp
  getopt.hpp
Rewrite copyright statement as 'GNUmakefile' now expects.

  mpatrol-mingw-GNUmakefile
Insert copyright statement for revisions.  

  datum_base.cpp
  datum_base.hpp
  mc_enum.cpp
  mc_enum.hpp
  mc_enum.tpp
  mc_enum_fwd.hpp
  mc_enum_test.cpp
  mc_enum_test_aux.cpp
  mc_enum_test_aux.hpp
  mc_enum_test_aux_enums.hpp
  mc_enum_type_enums.hpp
  mc_enum_types.cpp
  mc_enum_types.hpp
  numeric_io_cast.hpp
  numeric_io_test.cpp
  numeric_io_traits.hpp
  snprintf_test.cpp
  stream_cast.hpp
  stream_cast_test.cpp
  test_tools_test.cpp
  tn_range.hpp
  tn_range.tpp
  tn_range_fwd.hpp
  tn_range_test.cpp
  tn_range_test_aux.cpp
  tn_range_test_aux.hpp
  tn_range_type_trammels.hpp
  tn_range_types.cpp
  tn_range_types.hpp
Update email address for files imported 2005-02-03.

  GNUmakefile
Fix defect: datestamp headers not correctly updated because a simply-
expanded variable's definition did not precede its every use.

2005-02-23 [1061]

  GNUmakefile
  bcc_5_5_1.make   [new file]
  como_4_3_3.make  [new file]
  config_bc551.hpp [new file]
  msw_common.make
  objects.make
  pchfile.hpp
  platform_dependent.hpp
  workhorse.make
  wx_new.cpp       [new file]
  wx_new.hpp       [new file]
  wx_new_test.cpp  [new file]
Import recent changes from skeleton branch, providing limited support
for some non-free compilers.

  msw_common.make
Remove sections marked for expunction.

2005-02-28 [1061]

  test_tools.hpp
Fix defective typeid comparison.

  alert.cpp
  alert.hpp
  alert_test.cpp
Clear stream buffer and iostate flags after an exception is caught, so
that subsequent alerts are processed correctly. Improve documentation.

  actuarial_table.cpp
Read table length as unsigned. Formerly, tables of size [2^15, 2^16)
bytes elicited a spurious diagnostic, though they were read correctly.

  ihs_proddata.cpp
Prepend directory to filename only once.

  accountvalue.cpp
Implement a hitherto-unneeded member function, to make the production
and antediluvian branches more interchangeable.

  ihs_acctval.cpp
Avoid catastrophic cancellation.

2005-03-01 [1067]

  argv0.hpp
Improve documentation.

  calculate.hpp
  library_demo.cpp
  single_cell_document.cpp
  single_cell_document.hpp
Refactor class 'single_cell_document'.

  ledgervalues.cpp
Assign default filename for monthly output.

  database.cpp
Implement a hitherto-unneeded ctor to support regression testing.

  main.cpp
Add regression testing.

  objects.make
  workhorse.make
Add command-line interface for production branch.

2005-03-02 [1060]

  fancy.make
Add experimental fancy unit-test makefile.

2005-03-07 [1051]

  ledger_xml_io.cpp
Improve documentation.

  single_cell_document.hpp
Withdraw unnecessary friendship.

  wx_new.cpp
  wx_new_test.cpp
Fix defective placement of pch header.

  account_value.hpp
  ihs_acctval.cpp
  ihs_avdebug.cpp
  ihs_avmly.cpp
Remove an unsupported report that projected values for twelve months.

2005-03-09 [1065]

  ihs_server7702io.hpp
Fix an oversight in documentation.

  copy_n_.hpp
  is_sorted_.hpp
Use uppercase 'C' in old copyright notices, as FSF recommends.

  GNUmakefile
Add a test for lowercase 'c' in copyright notices. Remove test for
the author's old email address (which has been changed in all sources
already) and add an optional, customizable facility to search for
strings that any particular contributor may wish to prevent from
appearing accidentally in files about to be committed to cvs.

  mc_enum.hpp
  mc_enum.tpp
Make str() public. Add experimental member function allowed_ordinal().

  mc_enum_type_enums.hpp
  mc_enum_types.cpp
  mc_enum_types.hpp
  mc_enum_types.xpp [new file]
Add enumerative types useful for life insurance.

  tn_range_type_trammels.hpp
  tn_range_types.cpp
  tn_range_types.hpp
Add range types useful for life insurance.

2005-03-10 [1165]

  about_dialog.cpp          [new file]
  about_dialog.hpp          [new file]
  alert_wx.cpp              [new file]
  any_member.hpp            [new file]
  argv0_test.cpp            [new file]
  census_document.cpp       [new file]
  census_document.hpp       [new file]
  date_control.cpp          [new file]
  date_control.hpp          [new file]
  datum_boolean.cpp         [new file]
  datum_boolean.hpp         [new file]
  datum_string.cpp          [new file]
  datum_string.hpp          [new file]
  docmanager_ex.cpp         [new file]
  docmanager_ex.hpp         [new file]
  docmdichildframe_ex.cpp   [new file]
  docmdichildframe_ex.hpp   [new file]
  illustration_document.cpp [new file]
  illustration_document.hpp [new file]
  input.cpp                 [new file]
  input.hpp                 [new file]
  lmi.rc                    [new file]
  mc_enum_types.xpp         [new file]
  menus.xrc                 [new file]
  miscellany_lmi.hpp        [new file]
  previewframe_ex.cpp       [new file]
  previewframe_ex.hpp       [new file]
  text_doc.cpp              [new file]
  text_doc.hpp              [new file]
  text_view.cpp             [new file]
  text_view.hpp             [new file]
  toolbar.xrc               [new file]
  transferor.cpp            [new file]
  transferor.hpp            [new file]
  value_cast.hpp            [new file]
  view_ex.cpp               [new file]
  view_ex.hpp               [new file]
  wx_checks.cpp             [new file]
  wx_workarounds.hpp        [new file]
Import and adapt files from skeleton branch. Add new GUI files.

  datum_base.hpp
  ihs_funddata.hpp
  mc_enum_types.xpp
Improve documentation.

  miscellany.cpp
  miscellany.hpp
  miscellany_lmi.hpp [expunged]
Merge.

