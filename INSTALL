// INSTALL for "Let me illustrate...".
//
// Copyright (C) 2005 Gregory W. Chicares.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
//
// http://savannah.nongnu.org/projects/lmi
// email: <chicares@cox.net>
// snail: Chicares, 186 Belle Woods Drive, Glastonbury CT 06033, USA

// $Id: INSTALL,v 1.13 2005-09-02 16:10:00 wboutin Exp $

[It's clearest to validate commands, then copy and paste them here.
Once we've done that, it becomes trivial to turn this into a shell
script or a makefile--which is better than asking users to copy lines
from this file and paste them tediously into a shell. We'll want to
write everything as a command first (e.g. write a 'wget' command
instead of saying 'Go download some file'.]

* Special directory for certain third-party libraries

[Insert rationale for freezing particular versions of third-party
libraries--see
  http://boost.org/more/faq.htm
topic
  "How can the Boost libraries be used successfully for important projects?"
]

[/usr/local/include/ would not be appropriate for others who have
later versions of these libraries already installed in that location.
To accommodate their needs, the makefiles look in /opt/lmi/third-party/
for third-party libraries that we build as collections of objects.]

* Install and patch cgicc-3.1.4

Download
  ftp://ftp.gnu.org/pub/gnu/cgicc/cgicc-3.1.4.tar.bz2
and
  http://savannah.nongnu.org/cgi-bin/viewcvs/*checkout*/lmi/lmi/cgicc-patch-gwc-20050217
to /tmp/ .

Validate:
  /tmp[0]$md5sum cgicc-3.1.4.tar.bz2  cgicc-patch-gwc-20050217
  6cb5153fc9fa64b4e50c7962aa557bbe  cgicc-3.1.4.tar.bz2
  245c51c9c9c9f2b33b93650bef5467bf  cgicc-patch-gwc-20050217

Extract archive:
  /tmp[0]$bzip2 -dk cgicc-3.1.4.tar.bz2
  /tmp[0]$tar -xf cgicc-3.1.4.tar

Apply required patch:
  /tmp[0]$/msys/1.0/bin/patch --strip=0 <cgicc-patch-gwc-20050217 # note 0
  patching file `cgicc-3.1.4/cgicc/CgiDefs.h'
  patching file `cgicc-3.1.4/cgicc/CgiEnvironment.cpp'
  patching file `cgicc-3.1.4/cgicc/CgiUtils.cpp'

Copy cgicc's header files to the third-party hierarchy:
  /tmp[0]$mkdir -p /opt/lmi/third-party/include/cgicc/
  /tmp[0]$cp --preserve cgicc-3.1.4/cgicc/*.h /opt/lmi/third-party/include/cgicc/

Copy cgicc's source files to the third-party hierarchy:
  /tmp[0]$mkdir -p /opt/lmi/third-party/src/cgicc/
  /tmp[0]$cp --preserve cgicc-3.1.4/cgicc/*.cpp /opt/lmi/third-party/src/cgicc/

* Install and patch xmlwrapp-0.2.0

Download
  http://pmade.org/software/xmlwrapp/download/xmlwrapp-0.2.0.tar.gz
and
  http://savannah.nongnu.org/cgi-bin/viewcvs/*checkout*/lmi/lmi/xmlwrapp-patch-gwc-20050217
to /tmp/ .

Validate:
  /tmp[0]$md5sum xmlwrapp-patch-gwc-20050217 xmlwrapp-0.2.0.tar.gz
  69b6d8f00f7352e13ca7a68c4d6282c8  xmlwrapp-patch-gwc-20050217
  f142e8bc349597ecbaebb4a8e246b65a  xmlwrapp-0.2.0.tar.gz

Extract archive:
  /tmp[0]$gzip -d xmlwrapp-0.2.0.tar.gz
  /tmp[0]$tar -xf xmlwrapp-0.2.0.tar

Apply required patch:
  /tmp[0]$/msys/1.0/bin/patch --strip=0 <xmlwrapp-patch-gwc-20050217 # note 0
  patching file `xmlwrapp-0.2.0/include/xmlwrapp/event_parser.h'
  patching file `xmlwrapp-0.2.0/include/xmlwrapp/node.h'
  patching file `xmlwrapp-0.2.0/include/xmlwrapp/tree_parser.h'
  patching file `xmlwrapp-0.2.0/src/libxml/tree_parser.cxx'

Copy xmlwrapp's header files to the third-party hierarchy:
  /tmp[0]$mkdir -p /opt/lmi/third-party/include/xmlwrapp/
  /tmp[0]$cp --preserve xmlwrapp-0.2.0/include/xmlwrapp/*.h /opt/lmi/third-party/include/xmlwrapp/

Copy xmlwrapp's src files to the third-party hierarchy:
  /tmp[0]$mkdir -p /opt/lmi/third-party/src/libxml/
  /tmp[0]$cp --preserve xmlwrapp-0.2.0/src/libxml/* /opt/lmi/third-party/src/libxml/

* Install boost-1.31.0

Download
  http://prdownloads.sourceforge.net/boost/boost_1_31_0.tar.bz2
to /tmp/ .

Validate:
  /tmp[0]$md5sum boost_1_31_0.tar.bz2
  8cc183538eaa5cfc53d88d0e94bd2fd4  boost_1_31_0.tar.bz2

Extract archive:
  /tmp[0]$bzip2 -dk boost_1_31_0.tar.bz2
  /tmp[0]$tar -xf boost_1_31_0.tar

Copy boost header files to the third-party hierarchy:
  /tmp[0]$mkdir -p /opt/lmi/third-party/include/boost/
  /tmp[0]$pushd boost_1_31_0/boost/
  /tmp/boost/boost_1_31_0/boost[0]$/msys/1.0/bin/cp --force --parents --preserve --recursive * /c/opt/lmi/third-party/include/boost/
  
[WENDY--the ancient cp you're using won't do this without producing
tons of bogus diagnostics; alternatively, you could do this:

  /tmp/boost/boost_1_31_0/boost[0]$cp --force --parents --preserve --recursive * /opt/lmi/third-party/include/boost/ 2>/dev/null

but that would lose any meaningful diagnostics.

Something similar could be done for the source directory below.]

  /tmp/boost/boost_1_31_0/boost[0]$popd

Copy boost source files to the third-party hierarchy:
  /tmp[0]$mkdir -p /opt/lmi/third-party/src/boost_1_31_0
  /tmp[0]$pushd boost_1_31_0/
  /tmp[0]$/msys/1.0/bin/cp --force --parents --preserve --recursive * /c/opt/lmi/third-party/src/boost_1_31_0/
  /tmp/boost/boost_1_31_0[0]$popd

* Install libxml2-2.6.19

Download
  http://ftp.gnome.org/pub/GNOME/sources/libxml2/2.6/libxml2-2.6.19.tar.bz2
to /tmp/ .

Validate:
  /tmp[0]$md5sum libxml2-2.6.19.tar.bz2
  ed581732d586f86324ec46e572526ede  libxml2-2.6.19.tar.bz2

Extract archive:
  /tmp[0]$bzip2 -dk libxml2-2.6.19.tar.bz2
  /tmp[0]$tar -xf libxml2-2.6.19.tar

Build library with MSYS:
  wboutin@OWNER /c/tmp/libxml2-2.6.19
  $ ./configure && make

Copy libxml header files to the third-party hierarchy:
  /tmp[0]$mkdir -p /opt/lmi/third-party/include/libxml/
  /tmp[0]$pushd libxml2-2.6.19/include/libxml/
  /tmp/libxml2-2.6.19/include/libxml[0]$/msys/1.0/bin/cp.exe --force --parents --preserve --recursive * /c/opt/lmi/third-party/include/libxml/
  /tmp/libxml2-2.6.19/include/libxml[0]$popd

Copy libxml libraries to the third-party hierarchy:
  /tmp[0]$mkdir -p /opt/lmi/third-party/bin /opt/lmi/third-party/lib
  /tmp[0]$pushd libxml2-2.6.19/.libs/
  /tmp/libxml2-2.6.19/.libs[0]$cp -p libxml2-2.dll c:/opt/lmi/third-party/bin/
  /tmp/libxml2-2.6.19/.libs[0]$cp -p libxml2.dll.a c:/opt/lmi/third-party/lib/
  /tmp/libxml2-2.6.19/.libs[0]$popd

* Install and patch mpatrol_1.4.8

Download
  http://www.cbmamiga.demon.co.uk/mpatrol/files/mpatrol_1.4.8.tar.gz
and
  http://sourceforge.net/tracker/download.php?group_id=19456&atid=319456&file_id=117735&aid=1112376
to /tmp/ .

Validate:
  /tmp[0]$md5sum mpatrol_1.4.8.tar.gz mpatrol-zero-byte-moves.tar.bz2
  ada423c49bc5bfa7c3e7a80a711c2a1a  mpatrol_1.4.8.tar.gz
  d8281af88b98f35212a851942158a9f6  mpatrol-zero-byte-moves.tar.bz2

Extract archives:
  /tmp[0]$gzip -d mpatrol_1.4.8.tar.gz
  /tmp[0]$tar -xf mpatrol_1.4.8.tar
  /tmp[0]$bzip2 -dk mpatrol-zero-byte-moves.tar.bz2
  /tmp[0]$tar -xf mpatrol-zero-byte-moves.tar

Apply required patch:
  /tmp[0]$/msys/1.0/bin/patch --strip=0 <mpatrol/mpatrol-zero-byte-moves  # note 0
  patching file `mpatrol/src/malloc.c'

That patch suppresses diagnostics for behavior that's actually
undefined according to C99 7.21.1/2, but wxWidgets relies on that
behavior being benign.

Download:
  http://savannah.nongnu.org/cgi-bin/viewcvs/lmi/lmi/mpatrol-mingw-GNUmakefile
to /mpatrol/build/windows/ .

[This is specific to msw. We should give GNU/Linux commands too.]

Build mpatrol libraries:
  /tmp/mpatrol/build/windows[0]$path=(/usr/bin /MinGW/bin)
  /tmp/mpatrol/build/windows[0]$make -f mpatrol-mingw-GNUmakefile

Install mpatrol libraries:
  /tmp/mpatrol/build/windows[0]$make -f mpatrol-mingw-GNUmakefile install

* Install sed-4.0.7 # note 1

Download
  http://ftp.gnu.org/gnu/sed/sed-4.0.7.tar.gz
to /tmp/ .

Validate:
  /tmp[0]$md5sum sed-4.0.7.tar.gz
  005738e7f97bd77d95b6907156c8202a  sed-4.0.7.tar.gz

Extract archive:
  /tmp[0]$gzip -d sed-4.0.7.tar.gz
  /tmp[0]$tar -xf sed-4.0.7.tar

Build with MSYS:
  wboutin@OWNER /c/tmp/sed-4.0.7
  $ ./configure && make

Copy binary to path:
  mm39272@MM39272PC /c/tmp/sed-4.0.7/sed
  $ cp --force --parents --preserve --recursive sed.exe /c/usr/bin/

* Install wx

...
The following options must be set to 1 in wx/setup.h (or using configure):
    wxUSE_DOC_VIEW_ARCHITECTURE
    wxUSE_MDI_ARCHITECTURE
    wxUSE_PRINTING_ARCHITECTURE
    wxUSE_STD_STRING

The following options must be set to 0 (all thes are on by default):
    wxUSE_APPLE_IEEE
    wxUSE_LIBJPEG
    wxUSE_LIBTIFF
    wxUSE_GIF
    wxUSE_THREADS


* Platform-specific instructions

No special instructions are needed for GNU/Linux: on that platform,
everything will just work.

* Platform: msw

On the msw platform, it is necessary to install a compiler, a shell,
and certain general-purpose utilities that GNU/Linux systems provide
by default.

* Install MinGW

Download
  http://prdownloads.sourceforge.net/mingw/MinGW-4.1.0.exe?download
to /tmp/ .

Validate:
  /tmp[0]$md5sum MinGW-4.1.0.exe
  08ed1853fec1440b0ef03f0e3a8682af  MinGW-4.1.0.exe

Install
  /tmp[0]$./MinGW-4.1.0.exe

If an earlier release of MinGW already exists then this discussion
is useful prior to installing the newer release:
  http://gcc.gnu.org/ml/gcc-patches/2004-06/msg00703.html

...
[perhaps cygwin should be mentioned, too]

* Install MSYS

Download
  http://prdownloads.sourceforge.net/mingw/MSYS-1.0.10.exe?download
to /tmp/ .

Validate:
  /tmp[0]$md5sum MSYS-1.0.10.exe
  da686e2c7b283385ef79d7b75afb609c  MSYS-1.0.10.exe

Install:
  /tmp[0]$./MSYS-1.0.10.exe

  ...
[perhaps cygwin should be mentioned, too]

* Install zsh

Is there a particular version we want to use? My setup isn't allowing
me to easily determine what that version should be and the old recovery
CD only has a binary.

[WENDY--See the following comment. His last name is a good search term.
For now, at least, we'll keep using the last version he published.]

...
[amol deshpande's port, because MSYS's bash is broken [explain why]]

[perhaps we should mention cygwin's 'sh', which is an Almquist shell;
it's tiny and simple, and testing it ensures that shell scripts and
shell commands in makefiles are extremely portable]

---------

Notes.

note 0: Wendy--I think our msw users have an ancient and defective
version of 'patch'. They should instead use the one in the current
MSYS distribution. Probably they should copy it over the defective
binary they already have. At any rate, we mustn't write
  /tmp[0]$/msys/1.0/bin/patch ...
in platform-independent installation instructions: it should say only
  /tmp[0]$patch ...

Greg--The technique you suggest doesn't work. Apparently, 'msys-1.0.dll'
is required on the path. Once it's there, I get a return code one and
the files aren't patched.

WENDY--It worked for me. The manual tells you how to interpret the
return code, and discusses the program's behavior when it returns one.
In light of what the manual says, what other information can you share
that'll help us to get this working for you?

note 1: There are several later versions. Building sed-4.1.4 fails
for several reasons:
 - it expects some natural language that's not present
     ("./configure --disable-nls" seems to fix that)
 - it expects to find 'bcopy'
     (to fix that, "make CPPFLAGS='-DHAVE_STRING_H'")
 - it can't resolve multibyte-character functions
     (to fix that, suppress "#define HAVE_MBRTOWC 1" in config.h)
Those seem to be problems with MSYS or autotools, except that
the second one looks like a defect in the sed sources (a file
that uses 'bcopy' doesn't seem to include config.h).

