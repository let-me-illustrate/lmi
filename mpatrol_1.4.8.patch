diff --recursive --unified=3 original/mpatrol/src/malloc.c modified/mpatrol/src/malloc.c
--- original/mpatrol/src/malloc.c	2002-01-08 20:14:00.000000000 +0000
+++ modified/mpatrol/src/malloc.c	2009-04-26 22:58:37.991952000 +0000
@@ -26,6 +26,19 @@
  * haven't already been overridden by the mpatrol.h header file.
  */
 
+/*
+ * Modified 2003-05-16 by Gregory W. Chicares to prevent mpatrol from
+ * issuing a diagnostic for memmove() with a third argument of zero,
+ * even if that would mean moving zero bytes between freed blocks of
+ * memory. A test case is given here:
+ *   http://groups.yahoo.com/group/mpatrol/message/796
+ *
+ * Modified 2004-05-13 by Gregory W. Chicares to fix an error in my
+ * 2003-05-16 modification noted by Paul Dubuc <pdubuc@cas.org>.
+ *
+ * Modified 2005-01-29 by Gregory W. Chicares to fix a similar
+ * problem for memcpy().
+ */
 
 #include "inter.h"
 
@@ -749,7 +762,10 @@
 void *
 memcpy(void *q, MP_CONST void *p, size_t l)
 {
-    return __mp_copymem((void *) p, q, l, 0, AT_MEMCPY, NULL, NULL, 0, 1);
+    if(0 == l)
+        return q;
+    else
+        return __mp_copymem((void *) p, q, l, 0, AT_MEMCPY, NULL, NULL, 0, 1);
 }
 
 
@@ -758,7 +774,10 @@
 void *
 MP_ALTFUNCNAME(memcpy)(void *q, MP_CONST void *p, size_t l)
 {
-    return __mp_copymem((void *) p, q, l, 0, AT_MEMCPY, NULL, NULL, 0, 1);
+    if(0 == l)
+        return q;
+    else
+        return __mp_copymem((void *) p, q, l, 0, AT_MEMCPY, NULL, NULL, 0, 1);
 }
 #endif /* MP_ALTFUNCNAMES */
 
@@ -774,7 +793,10 @@
 void *
 memmove(void *q, MP_CONST void *p, size_t l)
 {
-    return __mp_copymem((void *) p, q, l, 0, AT_MEMMOVE, NULL, NULL, 0, 1);
+    if(0 == l)
+        return q;
+    else
+        return __mp_copymem((void *) p, q, l, 0, AT_MEMMOVE, NULL, NULL, 0, 1);
 }
 
 
@@ -783,7 +805,10 @@
 void *
 MP_ALTFUNCNAME(memmove)(void *q, MP_CONST void *p, size_t l)
 {
-    return __mp_copymem((void *) p, q, l, 0, AT_MEMMOVE, NULL, NULL, 0, 1);
+    if(0 == l)
+        return q;
+    else
+        return __mp_copymem((void *) p, q, l, 0, AT_MEMMOVE, NULL, NULL, 0, 1);
 }
 #endif /* MP_ALTFUNCNAMES */
 
