<?xml version="1.0" ?>
<!-- $Id:$ -->

<!--
  To generate Microsoft Visual C++ 2003 project files from this file use

  bakefile -f msvs2003prj -DWX_UNICODE=1 lmi.bkl
 -->
<makefile>
    <!--
        We pre-define this option which is usually defined in wx presets to
        change its descriptions: we don't want to have "Static" in the names of
        static configurations (having "DLL" for the shared ones is enough)
     -->
    <option name="WX_SHARED">
        <values>0,1</values>
        <values-description>,DLL</values-description>
        <default-value>0</default-value>
        <description>Use DLL build of wx library?</description>
    </option>

    <!-- wx-2.9 is now required and its default build is Unicode one -->
    <set var="WX_UNICODE">1</set>

    <!--
        Predefining WX_PORT gets rid of unwanted wxUniversal build
        configurations in MSVC projects. Similarly, predefining WX_MONOLITHIC
        removes the configurations using monolithic build of the library.
        Neither is strictly necessary but things are tidier like this.

        Finally, compiler is unknown (at makefile generation time) in the
        autoconf format so we need to wrap the test for it inside format test.
     -->
    <if cond="FORMAT!='autoconf'">
        <if cond="COMPILER=='vc'">
            <set var="WX_PORT">msw</set>
            <set var="WX_MONOLITHIC">0</set>
        </if>
    </if>

    <include file="presets/simple.bkl"/>
    <include file="presets/wx.bkl"/>
    <include file="lmi_files.bkl"/>

    <template id="lmibase">
        <include>$(SRCDIR)</include>
        <warnings>max</warnings>

        <!--
            When using MSVC compiler we don't want to disable the warning 4996
            about the use of deprecated functions as it can be useful for
            noticing when deprecated functions of other libraries we use (e.g.
            wxWidgets) are used in our code. But we do want to be able to
            [continue to] use the standard C library functions without
            warnings, so define _CRT_SECURE_NO_WARNINGS to suppress warnings
            about the use of standard C/C++ library such as strcpy() or
            vsnprintf() and _CRT_NONSTDC_NO_WARNINGS to suppress warnings about
            POSIX functions such as close().

            Notice that these definitions are only needed for MSVC 8 and
            greater but they do no harm for MSVC 7 neither so just define them
            always instead of adding more tests.
         -->
        <if cond="COMPILER=='vc'">
            <define>_CRT_SECURE_NO_WARNINGS</define>
            <define>_CRT_NONSTDC_NO_WARNINGS</define>

            <!-- PCH size is too large for VC++ 2008 without this: -->
            <cxxflags>/Zm125</cxxflags>
        </if>

        <!-- for PCH support, LMI_PCH_HEADER must always be defined;
             let the default be the one for non-wx sources -->
        <set var="LMI_PCH_HEADER">pchfile.hpp</set>
        <set var="LMI_PCH_HEADER_DEFINE" eval="0">
            LMI_PCH_HEADER="$(LMI_PCH_HEADER)"
        </set>
        <define>$(LMI_PCH_HEADER_DEFINE)</define>
    </template>

    <template id="lmilib" template="wx-lib,wxlike,lmibase"/>
    <template id="lmiapp" template="wxlike,lmibase"/>

    <lib id="lmi" template="lmilib">
        <include>tools/pete-2.1.1</include>
        <sources>
            $(LIBLMI_SOURCES)
            $(LIBLMI_COMMON_SOURCES)
        </sources>

        <precomp-headers>on</precomp-headers>
        <precomp-headers-header>pchfile.hpp</precomp-headers-header>
        <!-- generate PCH through arbitrary file, for VC9+: -->
        <precomp-headers-gen>global_settings.cpp</precomp-headers-gen>

        <precomp-headers-exclude>
            md5.cpp
        </precomp-headers-exclude>
    </lib>

    <!--
        We inherit from wxgui template which defines debug and release build
        configurations and provides everything we need for building a wx
        application. The wxlike template is needed to ensure that we use the
        same debug/release configuration of wx as of the main application as we
        don't want to have configurations involving debug build of the
        application and release build of the library and vice versa.
     -->
    <exe id="lmi_wx" template="wxgui,lmiapp">
        <sources>
            $(LMI_WX_SOURCES)
            <!--
                Include this one directly here too to avoid creating a library
                with just a single file in it.
              -->
            $(LIBWX_NEW_SOURCES)
        </sources>
        <win32-res>lmi.rc</win32-res>

        <precomp-headers>on</precomp-headers>
        <set var="LMI_PCH_HEADER">pchfile_wx.hpp</set>
        <precomp-headers-header>pchfile_wx.hpp</precomp-headers-header>
        <!-- generate PCH through arbitrary file, for VC9+: -->
        <precomp-headers-gen>wx_checks.cpp</precomp-headers-gen>

        <wx-lib>base</wx-lib>
        <wx-lib>core</wx-lib>
        <wx-lib>adv</wx-lib>
        <wx-lib>html</wx-lib>
        <wx-lib>xrc</wx-lib>
        <wx-lib>xml</wx-lib>
        <library>lmi</library>
        <sys-lib>xsltwrapp$(WX3RDPARTYLIBPOSTFIX)</sys-lib>
        <sys-lib>xmlwrapp$(WX3RDPARTYLIBPOSTFIX)</sys-lib>
        <sys-lib>libexslt</sys-lib>
        <sys-lib>libxslt</sys-lib>
        <sys-lib>libxml2</sys-lib>
    </exe>

    <exe id="product_files" template="wxconsole,lmiapp">
        <sources>$(PRODUCT_FILES_SOURCES)</sources>
        <library>lmi</library>
        <sys-lib>xmlwrapp$(WX3RDPARTYLIBPOSTFIX)</sys-lib>
        <sys-lib>libxml2</sys-lib>
    </exe>
</makefile>
