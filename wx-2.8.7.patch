diff --recursive --unified=3 original/wxWidgets-2.8.7/src/common/cshelp.cpp modified/wxWidgets-2.8.7/src/common/cshelp.cpp
--- original/wxWidgets-2.8.7/src/common/cshelp.cpp	2007-11-21 12:41:57.000000000 +0000
+++ modified/wxWidgets-2.8.7/src/common/cshelp.cpp	2008-03-05 18:05:30.259306600 +0000
@@ -384,6 +384,11 @@
 bool wxSimpleHelpProvider::ShowHelp(wxWindowBase *window)
 {
 #if wxUSE_MS_HTML_HELP || wxUSE_TIPWINDOW
+#if wxUSE_MS_HTML_HELP
+    // m_helptextAtPoint will be reset by GetHelpTextMaybeAtPoint(), stash it
+    const wxPoint posTooltip = m_helptextAtPoint;
+#endif // wxUSE_MS_HTML_HELP
+
     const wxString text = GetHelpTextMaybeAtPoint(window);
 
     if ( !text.empty() )
@@ -393,7 +398,7 @@
         if ( !wxCHMHelpController::ShowContextHelpPopup
                                    (
                                         text,
-                                        wxGetMousePosition(),
+                                        posTooltip,
                                         (wxWindow *)window
                                    ) )
 #endif // wxUSE_MS_HTML_HELP
diff --recursive --unified=3 original/wxWidgets-2.8.7/src/common/wincmn.cpp modified/wxWidgets-2.8.7/src/common/wincmn.cpp
--- original/wxWidgets-2.8.7/src/common/wincmn.cpp	2007-11-21 12:41:57.000000000 +0000
+++ modified/wxWidgets-2.8.7/src/common/wincmn.cpp	2008-03-05 18:05:29.728036200 +0000
@@ -392,6 +392,14 @@
 #if wxUSE_ACCESSIBILITY
     delete m_accessible;
 #endif
+
+#if wxUSE_HELP
+    // NB: this has to be called unconditionally, because we don't
+    //     know whether this window has associated help text or not
+    wxHelpProvider *helpProvider = wxHelpProvider::Get();
+    if ( helpProvider )
+        helpProvider->RemoveHelp(this);
+#endif
 }
 
 void wxWindowBase::SendDestroyEvent()
@@ -1635,7 +1643,29 @@
     wxHelpProvider *helpProvider = wxHelpProvider::Get();
     if ( helpProvider )
     {
-        if ( helpProvider->ShowHelpAtPoint(this, event.GetPosition(), event.GetOrigin()) )
+        wxPoint pos = event.GetPosition();
+        const wxHelpEvent::Origin origin = event.GetOrigin();
+        if ( origin == wxHelpEvent::Origin_Keyboard )
+        {
+            // if the help event was generated from keyboard it shouldn't
+            // appear at the mouse position (which is still the only position
+            // associated with help event) if the mouse is far away, although
+            // we still do use the mouse position if it's over the window
+            // because we suppose the user looks approximately at the mouse
+            // already and so it would be more convenient than showing tooltip
+            // at some arbitrary position which can be quite far from it
+            const wxRect rectClient = GetClientRect();
+            if ( !rectClient.Contains(ScreenToClient(pos)) )
+            {
+                // position help slightly under and to the right of this window
+                pos = ClientToScreen(wxPoint(
+                        2*GetCharWidth(),
+                        rectClient.height + GetCharHeight()
+                      ));
+            }
+        }
+
+        if ( helpProvider->ShowHelpAtPoint(this, pos, origin) )
         {
             // skip the event.Skip() below
             return;
diff --recursive --unified=3 original/wxWidgets-2.8.7/src/msw/spinctrl.cpp modified/wxWidgets-2.8.7/src/msw/spinctrl.cpp
--- original/wxWidgets-2.8.7/src/msw/spinctrl.cpp	2007-11-21 12:42:46.000000000 +0000
+++ modified/wxWidgets-2.8.7/src/msw/spinctrl.cpp	2008-03-05 18:05:30.181178600 +0000
@@ -147,8 +147,7 @@
 {
     wxSpinCtrl *spin = (wxSpinCtrl *)wxGetWindowUserData(hwnd);
 
-    // forward some messages (the key and focus ones only so far) to
-    // the spin ctrl
+    // forward some messages (mostly the key and focus ones) to the spin ctrl
     switch ( message )
     {
         case WM_SETFOCUS:
@@ -163,6 +162,12 @@
         case WM_DEADCHAR:
         case WM_KEYUP:
         case WM_KEYDOWN:
+#ifdef WM_HELP
+        // we need to forward WM_HELP too to ensure that the context help
+        // associated with wxSpinCtrl is shown when the text control part of it
+        // is clicked with the "?" cursor
+        case WM_HELP:
+#endif
             spin->MSWWindowProc(message, wParam, lParam);
 
             // The control may have been deleted at this point, so check.
diff --recursive --unified=3 original/wxWidgets-2.8.7/src/msw/textctrl.cpp modified/wxWidgets-2.8.7/src/msw/textctrl.cpp
--- original/wxWidgets-2.8.7/src/msw/textctrl.cpp	2007-11-21 12:42:46.000000000 +0000
+++ modified/wxWidgets-2.8.7/src/msw/textctrl.cpp	2008-03-05 18:05:29.399898600 +0000
@@ -1964,6 +1964,19 @@
 
 WXLRESULT wxTextCtrl::MSWWindowProc(WXUINT nMsg, WXWPARAM wParam, WXLPARAM lParam)
 {
+    // we must handle clipboard events before calling MSWWindowProc, otherwise
+    // the event would be handled twice if there's a handler for it in user
+    // code:
+    switch ( nMsg )
+    {
+        case WM_CUT:
+        case WM_COPY:
+        case WM_PASTE:
+            if ( HandleClipboardEvent(nMsg) )
+                return 0;
+            break;
+    }
+
     WXLRESULT lRc = wxTextCtrlBase::MSWWindowProc(nMsg, wParam, lParam);
 
     switch ( nMsg )
@@ -2006,13 +2019,6 @@
                 }
             }
             break;
-
-        case WM_CUT:
-        case WM_COPY:
-        case WM_PASTE:
-            if ( HandleClipboardEvent(nMsg) )
-                lRc = 0;
-            break;
     }
 
     return lRc;
